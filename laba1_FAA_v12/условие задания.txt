Магистров с факультета математики застукали за распитием кофе в лаборатории. В связи с этим дежурного сотрудника обязали вести электронный журнал учёта кофе. В помощь лаборатории, напишите программу для работы с таким журналом, проверяющую правильность заполнения журнала.
Запись в журнале: время доступа к кофеварке, информация о сотруднике (Ф.И.О., должность и учёная степень) и оказанное влияние на объём кофе (больше нуля, если прибавилось и меньше, если убавилось)
Журнал (массив записей): ёмкость колбы, метод проверки журнала на наличие ошибок (кофе было меньше нуля или больше, чем вмещает колба)
Запись дежурного: время наблюдения, текущий объём кофе

Структура класса
Класс соответствует своему варианту
коллекция реализована самостоятельно на основе стека по аналогии с std::stack или QStack
в коллекции не используются шаблонные классы сторонних библиотек (stl, Qt, boost и т.п.)
Класс содержит перечисленные пункты:
деструктор
В классе-коллекции должны быть определены
конструктор по умолчанию (варианты 1–12)
конструктор инициализации (варианты 10–15, размер коллекции как параметр)
конструктор копирования
методы добавления и удаления элементов (варианты 1–12)
метод доступа к элементу по индексу (варианты 10–15)
метод, удаляющий все хранимые объекты
метод, возвращающий число хранящихся объектов
прочие методы, если таковые требуются по условию задачи

//класс итератора для обхода всех элементов коллекции
//методы, возвращающие итераторы на первый и последний элемент коллекции
Класс устойчив к ошибкам
вся динамически выделенная память успешно освобождается
публичные методы коллекции не принимают и не возвращают указатели на свои поля

Работа с файлами
Класс содержит методы работы с файлами
метод, принимающий путь к файлу и сохраняющий в него содержимое коллекции
метод, принимающий путь к файлу и загружающий из него содержимое коллекции
Используется один из способов представления данных
Читаемый текст: (std::fstream или QTextStream)
Двоичные данные: (std::fstream + std::ios::binary или QDataStream
Другие форматы: XML (QXmlStreamWriter + QXmlStreamReader), JSON (QJsonDocument) и т.п.
Нет ошибок при записи/чтении файла
Содержимое коллекции записывается в произвольный (указанный) файл и читается из того же файла без изменений
